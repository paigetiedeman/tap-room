{"version":3,"sources":["components/Header.js","components/ReusableForm.js","components/NewSeltzerForm.js","components/Seltzer.js","components/SeltzerList.js","components/SeltzerDetail.js","components/EditSeltzerForm.js","components/SeltzerControl.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","ReusableForm","props","onSubmit","formSubmissionHandler","for","type","name","placeholder","buttonText","NewSeltzerForm","event","preventDefault","onNewSeltzerCreation","target","value","brand","price","alcoholContent","quantity","id","v4","Seltzer","styledCard","backgroundColor","textAlign","border","color","float","padding","margin","borderRadius","style","onClick","whenSeltzerClicked","onClickBuy","SeltzerList","seltzerList","map","seltzer","onSeltzerSelection","SeltzerDetail","onClickDelete","onClickEdit","EditSeltzerForm","onEditSeltzer","SeltzerControl","handleClick","state","selectedSeltzer","setState","formVisibleOnPage","prevState","handleNewSeltzerToList","newSeltzer","newSeltzerList","mainSeltzerList","concat","handleChangingSelectedSeltzer","filter","handleDeletingSeltzer","handleEditClick","editing","handleEditingSeltzer","seltzerToEdit","editMainSeltzer","handleSellPint","find","currentlyVisibleState","this","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAWeA,MATf,WACE,OACE,qCACE,oBAAIC,UAAU,QAAd,+BACA,2B,oCC6BSC,MAhCf,SAAsBC,GACpB,OACE,qCACI,uBAAMC,SAAUD,EAAME,sBAAtB,UACE,uBAAOC,IAAI,OAAX,mBACA,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,kBAAkBR,UAAU,iBACvE,uBACA,uBAAOK,IAAI,QAAX,4BACA,uBAAOC,KAAK,OAAOC,KAAK,QAAQC,YAAY,WAAWR,UAAU,iBACjE,uBACA,uBAAOK,IAAI,QAAX,6BACA,uBAAOC,KAAK,SAASC,KAAK,QAAQC,YAAY,KAAKR,UAAU,iBAC7D,uBACA,uBAAOK,IAAI,iBAAX,kBACA,uBAAOC,KAAK,SAASC,KAAK,iBAAiBC,YAAY,KAAKR,UAAU,iBACtE,uBACA,uBAAOK,IAAI,WAAX,4BACA,uBAAOC,KAAK,SAASC,KAAK,WAAWC,YAAY,YAAYR,UAAU,iBACvE,uBACA,wBAAQM,KAAK,SAASN,UAAU,eAAhC,SAAgDE,EAAMO,aACtD,0BAEJ,2BCOSC,MA3Bf,SAAwBR,GActB,OACE,mCACE,cAAC,EAAD,CACAE,sBAfJ,SAAwCO,GACtCA,EAAMC,iBACNV,EAAMW,qBAAqB,CACzBN,KAAMI,EAAMG,OAAOP,KAAKQ,MACxBC,MAAOL,EAAMG,OAAOE,MAAMD,MAC1BE,MAAON,EAAMG,OAAOG,MAAMF,MAC1BG,eAAgBP,EAAMG,OAAOI,eAAeH,MAC5CI,SAAUR,EAAMG,OAAOK,SAASJ,MAChCK,GAAIC,iBAQJZ,WAAa,YCmCJa,MAvDf,SAAiBpB,GACb,IAAMqB,EAAa,CACjBC,gBAAiB,SACjBC,UAAW,SACXC,OAAQ,kBACRC,MAAO,QACPC,MAAO,OACPC,QAAS,OACTC,OAAQ,OACRC,aAAc,sBAGhB,OAAI7B,EAAMiB,UAAY,EAEpB,mCACE,sBAAKa,MAAOT,EAAZ,UACE,6BAAKrB,EAAMK,OACX,8BAAG,4CAAH,IAA4BL,EAAMc,SAClC,mCAAMd,EAAMe,MAAZ,eACA,sCAASf,EAAMgB,eAAf,OACA,yCACA,uBACA,wBAAQe,QAAS,kBAAM/B,EAAMgC,mBAAmBhC,EAAMkB,KAAKpB,UAAU,gBAArE,+BAMF,mCACE,sBAAKgC,MAAOT,EAAZ,UACE,6BAAKrB,EAAMK,OACX,8BAAG,4CAAH,IAA4BL,EAAMc,SAClC,mCAAMd,EAAMe,MAAZ,eACA,sCAASf,EAAMgB,eAAf,OACA,8BAAIhB,EAAMiB,SAAV,iBACA,uBACA,wBAAQc,QAAS,kBAAM/B,EAAMgC,mBAAmBhC,EAAMkB,KAAKpB,UAAU,gBAArE,0BACA,wBAAQiC,QAAS,kBAAM/B,EAAMiC,WAAWjC,EAAMkB,KAAKpB,UAAU,gBAA7D,6BCVGoC,MA1Bf,SAAqBlC,GACnB,OACE,mCACA,qBAAKF,UAAU,YAAf,SACGE,EAAMmC,YAAYC,KAAI,SAACC,GAAD,OACrB,cAAC,EAAD,CAASL,mBAAuBhC,EAAMsC,mBACpCjC,KAAMgC,EAAQhC,KACdS,MAAOuB,EAAQvB,MACfC,MAAOsB,EAAQtB,MACfC,eAAgBqB,EAAQrB,eACxBC,SAAUoB,EAAQpB,SAClBC,GAAImB,EAAQnB,GAEZe,WAAYjC,EAAMiC,YADbI,EAAQnB,YCWRqB,MAxBf,SAAuBvC,GACrB,IAAQqC,EAAYrC,EAAZqC,QACR,OACE,qCACE,gDACA,sBAAKvC,UAAU,UAAf,UACE,6BAAKuC,EAAQhC,OACb,wCAAWgC,EAAQvB,SACnB,mCAAMuB,EAAQtB,SACd,sCAASsB,EAAQrB,eAAjB,OACA,8BAAIqB,EAAQpB,SAAZ,oBAEF,wBAAQc,QAAS,kBAAM/B,EAAMwC,cAAcH,EAAQnB,KAAKpB,UAAU,eAAlE,4BACA,wBAAQiC,QAAU/B,EAAMyC,YAAc3C,UAAU,eAAhD,gCCcS4C,MA1Bf,SAAyB1C,GACvB,IAAQqC,EAAYrC,EAAZqC,QAYR,OACE,mCACE,cAAC,EAAD,CACAnC,sBAbJ,SAAwCO,GACtCA,EAAMC,iBACNV,EAAM2C,cAAc,CAAEtC,KAAMI,EAAMG,OAAOP,KAAKQ,MAC5CC,MAAOL,EAAMG,OAAOE,MAAMD,MAC1BE,MAAON,EAAMG,OAAOG,MAAMF,MAC1BG,eAAgBP,EAAMG,OAAOI,eAAeH,MAC5CI,SAAUR,EAAMG,OAAOK,SAASJ,MAChCK,GAAImB,EAAQnB,MAOZX,WAAW,oBCsEFqC,E,kDAnFb,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IASR6C,YAAc,WACsB,MAA9B,EAAKC,MAAMC,gBACb,EAAKC,SAAS,CAAEC,mBAAmB,EAAOF,gBAAiB,OAG3D,EAAKC,UAAS,SAAAE,GAAS,MAAK,CAC5BD,mBAAoBC,EAAUD,uBAhBf,EAqBnBE,uBAAyB,SAACC,GACxB,IAAMC,EAAiB,EAAKP,MAAMQ,gBAAgBC,OAAOH,GACzD,EAAKJ,SAAS,CAACC,mBAAmB,EAAOK,gBAAiBD,KAvBzC,EA0BnBG,8BAAgC,SAACtC,GAC/B,IAAM6B,EAAkB,EAAKD,MAAMQ,gBAAgBG,QAAO,SAAApB,GAAO,OAAIA,EAAQnB,KAAOA,KAAI,GACxF,EAAK8B,SAAS,CAACD,gBAAiBA,KA5Bf,EA+BnBW,sBAAwB,SAACxC,GACvB,IAAMmC,EAAiB,EAAKP,MAAMQ,gBAAgBG,QAAO,SAAApB,GAAO,OAAIA,EAAQnB,KAAOA,KACnF,EAAK8B,SAAS,CAACM,gBAAiBD,EAAgBN,gBAAiB,QAjChD,EAoCnBY,gBAAkB,WAChB,EAAKX,SAAS,CAACY,SAAS,KArCP,EAwCnBC,qBAAuB,SAACC,GACtB,IAAMC,EAAkB,EAAKjB,MAAMQ,gBAAgBG,QAAO,SAAApB,GAAO,OAAIA,EAAQnB,KAAO,EAAK4B,MAAMC,gBAAgB7B,MAC9GqC,OAAOO,GACR,EAAKd,SAAS,CACZM,gBAAiBS,EACjBH,SAAS,EACTb,gBAAiB,QA9CF,EAkDnBiB,eAAiB,SAAC9C,GAChB,IAAI6B,EAAkB,EAAKD,MAAMQ,gBAAgBW,MAAK,SAAA5B,GAAO,OAAIA,EAAQnB,KAAOA,KAChF6B,EAAgB9B,WAChB,IAAMoC,EAAiB,EAAKP,MAAMQ,gBAAgBlB,KAAI,SAACC,GAAa,OAAOA,EAAQnB,KAAOA,EAAK6B,EAAkBV,KACjH,EAAKW,SAAS,CAAEM,gBAAiBD,KApDjC,EAAKP,MAAQ,CACXG,mBAAmB,EACnBK,gBAAiB,GACjBP,gBAAiB,KACjBa,SAAS,GANM,E,0CA0DnB,WACE,IAAIM,EAAwB,KACxB3D,EAAa,KAcjB,OAbI4D,KAAKrB,MAAMc,SACbM,EAAwB,cAAC,EAAD,CAAiB7B,QAAS8B,KAAKrB,MAAMC,gBAAiBJ,cAAiBwB,KAAKN,uBACpGtD,EAAa,0BAC0B,MAA9B4D,KAAKrB,MAAMC,iBACpBmB,EAAwB,cAAC,EAAD,CAAe7B,QAAS8B,KAAKrB,MAAMC,gBAAiBP,cAAe2B,KAAKT,sBAAuBjB,YAAe0B,KAAKR,kBAC3IpD,EAAa,0BACJ4D,KAAKrB,MAAMG,mBACpBiB,EAAwB,cAAC,EAAD,CAAgBvD,qBAAsBwD,KAAKhB,yBACnE5C,EAAa,2BAEb2D,EAAwB,cAAC,EAAD,CAAa/B,YAAagC,KAAKrB,MAAMQ,gBAAiBhB,mBAAoB6B,KAAKX,8BAA+BvB,WAAckC,KAAKH,iBACzJzD,EAAa,mBAGb,qCACG2D,EACD,wBAAQnC,QAASoC,KAAKtB,YAAa/C,UAAU,eAA7C,SAA6DS,W,GA/ExC6D,IAAMC,WCUpBC,MAXf,WACE,OACE,qBAAKxE,UAAU,gBAAf,SACE,qCACA,cAAC,EAAD,IACA,cAAC,EAAD,UCESyE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.88cd5660.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header(){\r\n  return (\r\n    <>\r\n      <h1 className=\"title\">Summer's Seltzery</h1>\r\n      <br/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ReusableForm(props) {\r\n  return(\r\n    <>\r\n        <form onSubmit={props.formSubmissionHandler}>\r\n          <label for=\"name\">Name:</label>\r\n          <input type=\"text\" name=\"name\" placeholder=\"Apple Cranberry\" className=\"form-control\"/>\r\n          <br />\r\n          <label for=\"brand\">Brand/Company:</label>\r\n          <input type=\"text\" name=\"brand\" placeholder=\"San Juan\" className=\"form-control\"/>\r\n          <br/>\r\n          <label for=\"price\">Price per Pint:</label>\r\n          <input type=\"number\" name=\"price\" placeholder=\"$6\" className=\"form-control\"/>\r\n          <br/>\r\n          <label for=\"alcoholContent\">ABV:</label>\r\n          <input type=\"number\" name=\"alcoholContent\" placeholder=\"8%\" className=\"form-control\"/>\r\n          <br/>\r\n          <label for=\"quantity\">Pints Per Keg:</label>\r\n          <input type=\"number\" name=\"quantity\" placeholder=\"124 pints\" className=\"form-control\"/>\r\n          <br />\r\n          <button type=\"submit\" className=\"btn btn-dark\">{props.buttonText}</button>\r\n          <br />\r\n      </form>\r\n      <br />\r\n    </> \r\n  )\r\n}\r\n\r\nReusableForm.propTypes = {\r\n  formSubmissionHandler: PropTypes.func,\r\n  buttonText: PropTypes.string\r\n}\r\n\r\nexport default ReusableForm;","import React from 'react';\r\nimport { v4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport ReusableForm from './ReusableForm';\r\n\r\nfunction NewSeltzerForm(props) {\r\n\r\n  function handleNewSeltzerFormSubmission(event) {\r\n    event.preventDefault();\r\n    props.onNewSeltzerCreation({\r\n      name: event.target.name.value,\r\n      brand: event.target.brand.value,\r\n      price: event.target.price.value,\r\n      alcoholContent: event.target.alcoholContent.value,\r\n      quantity: event.target.quantity.value,\r\n      id: v4()\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ReusableForm\r\n      formSubmissionHandler={handleNewSeltzerFormSubmission}\r\n      buttonText = \"Add!\" />     \r\n    </>\r\n  );\r\n}\r\n\r\nNewSeltzerForm.propTypes = {\r\n  onNewSeltzerCreation: PropTypes.func\r\n}\r\n\r\nexport default NewSeltzerForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Seltzer(props){\r\n    const styledCard = {\r\n      backgroundColor: 'tomato',\r\n      textAlign: 'center',\r\n      border: '2px solid white',\r\n      color: 'white',\r\n      float: 'left',\r\n      padding: '40px',\r\n      margin: '10px',\r\n      borderRadius: '10px 100px / 120px',\r\n    }\r\n\r\n    if (props.quantity <= 0) {\r\n    return (\r\n      <>\r\n        <div style={styledCard}>\r\n          <h2>{props.name}</h2>\r\n          <p><strong>Brand:</strong> {props.brand}</p>\r\n          <p>$ {props.price}/per pint</p>\r\n          <p>ABV: {props.alcoholContent}%</p>\r\n          <p>SOLD OUT</p>\r\n          <br/>\r\n          <button onClick={() => props.whenSeltzerClicked(props.id)} className=\"btn btn-light\">View Details</button>\r\n        </div>\r\n      </>\r\n    )\r\n    }\r\n      return (\r\n        <>\r\n          <div style={styledCard}>\r\n            <h2>{props.name}</h2>\r\n            <p><strong>Brand:</strong> {props.brand}</p>\r\n            <p>$ {props.price}/per pint</p>\r\n            <p>ABV: {props.alcoholContent}%</p>\r\n            <p>{props.quantity} pints left</p>\r\n            <br/>\r\n            <button onClick={() => props.whenSeltzerClicked(props.id)} className=\"btn btn-light\">View Details</button>\r\n            <button onClick={() => props.onClickBuy(props.id)} className=\"btn btn-light\">Sell Pint</button>\r\n          </div>\r\n        </>\r\n      )\r\n    \r\n}\r\n\r\nSeltzer.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  brand: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  alcoholContent: PropTypes.string.isRequired,\r\n  quantity: PropTypes.number,\r\n  id: PropTypes.string,\r\n  whenSeltzerClicked: PropTypes.func,\r\n  onClickBuy: PropTypes.func,\r\n}\r\n\r\nexport default Seltzer;","import React from 'react';\r\nimport Seltzer from './Seltzer';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction SeltzerList(props) {\r\n  return (\r\n    <>\r\n    <div className=\"card-deck\">\r\n      {props.seltzerList.map((seltzer) =>\r\n        <Seltzer whenSeltzerClicked = { props.onSeltzerSelection}\r\n          name={seltzer.name}\r\n          brand={seltzer.brand}\r\n          price={seltzer.price}\r\n          alcoholContent={seltzer.alcoholContent}\r\n          quantity={seltzer.quantity}\r\n          id={seltzer.id}\r\n          key={seltzer.id} \r\n          onClickBuy={props.onClickBuy}/>\r\n      )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nSeltzerList.propTypes = {\r\n  seltzerList: PropTypes.array,\r\n  onSeltzerSelection: PropTypes.func,\r\n  onClickBuy: PropTypes.func\r\n}\r\n\r\nexport default SeltzerList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction SeltzerDetail(props) {\r\n  const { seltzer } = props;\r\n  return (\r\n    <>\r\n      <h1>Seltzer Detail</h1>\r\n      <div className=\"details\">\r\n        <h3>{seltzer.name}</h3>\r\n        <p>Brand: {seltzer.brand}</p>\r\n        <p>$ {seltzer.price}</p>\r\n        <p>ABV: {seltzer.alcoholContent}%</p>\r\n        <p>{seltzer.quantity} pints left</p>\r\n      </div>\r\n      <button onClick={() => props.onClickDelete(seltzer.id)} className=\"btn btn-dark\">Remove Seltzer</button>\r\n      <button onClick={ props.onClickEdit } className=\"btn btn-dark\">Update Seltzer</button>\r\n    </>\r\n  )\r\n}\r\n\r\nSeltzerDetail.propTypes = { \r\n  seltzer: PropTypes.object,\r\n  onClickDelete: PropTypes.func,\r\n  onClickEdit: PropTypes.func\r\n}\r\n\r\nexport default SeltzerDetail;","import React from 'react';\r\nimport ReusableForm from './ReusableForm';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction EditSeltzerForm(props) {\r\n  const { seltzer } = props;\r\n\r\n  function handleEditingSeltzerSubmission(event){\r\n    event.preventDefault();\r\n    props.onEditSeltzer({ name: event.target.name.value,\r\n      brand: event.target.brand.value,\r\n      price: event.target.price.value,\r\n      alcoholContent: event.target.alcoholContent.value,\r\n      quantity: event.target.quantity.value,\r\n      id: seltzer.id\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <ReusableForm\r\n      formSubmissionHandler={handleEditingSeltzerSubmission}\r\n      buttonText=\"Edit Seltzer\" />\r\n    </>\r\n  );\r\n}\r\n\r\nEditSeltzerForm.propTypes = {\r\n  seltzer: PropTypes.object,\r\n  onEditSeltzer: PropTypes.func\r\n}\r\nexport default EditSeltzerForm;","import React from 'react';\r\nimport NewSeltzerForm from './NewSeltzerForm';\r\nimport SeltzerList from './SeltzerList';\r\nimport SeltzerDetail from './SeltzerDetail';\r\nimport EditSeltzerForm from './EditSeltzerForm';\r\n\r\nclass SeltzerControl extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      formVisibleOnPage: false,\r\n      mainSeltzerList: [],\r\n      selectedSeltzer: null,\r\n      editing: false\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (this.state.selectedSeltzer != null) {\r\n      this.setState({ formVisibleOnPage: false, selectedSeltzer: null});\r\n    }\r\n    else {\r\n      this.setState(prevState => ({\r\n      formVisibleOnPage: !prevState.formVisibleOnPage\r\n    }));\r\n  }\r\n  }\r\n\r\n  handleNewSeltzerToList = (newSeltzer) => {\r\n    const newSeltzerList = this.state.mainSeltzerList.concat(newSeltzer);\r\n    this.setState({formVisibleOnPage: false, mainSeltzerList: newSeltzerList});\r\n  }\r\n\r\n  handleChangingSelectedSeltzer = (id) => {\r\n    const selectedSeltzer = this.state.mainSeltzerList.filter(seltzer => seltzer.id === id)[0];\r\n    this.setState({selectedSeltzer: selectedSeltzer});\r\n  }\r\n\r\n  handleDeletingSeltzer = (id) => {\r\n    const newSeltzerList = this.state.mainSeltzerList.filter(seltzer => seltzer.id !== id);\r\n    this.setState({mainSeltzerList: newSeltzerList, selectedSeltzer: null});\r\n  }\r\n\r\n  handleEditClick = () => {\r\n    this.setState({editing: true});\r\n  }\r\n\r\n  handleEditingSeltzer = (seltzerToEdit) => {\r\n    const editMainSeltzer = this.state.mainSeltzerList.filter(seltzer => seltzer.id !== this.state.selectedSeltzer.id)\r\n    .concat(seltzerToEdit);\r\n    this.setState({ \r\n      mainSeltzerList: editMainSeltzer,\r\n      editing: false,\r\n      selectedSeltzer: null\r\n    });\r\n  }\r\n\r\n  handleSellPint = (id) => {\r\n    let selectedSeltzer = this.state.mainSeltzerList.find(seltzer => seltzer.id === id);\r\n    selectedSeltzer.quantity --;\r\n    const newSeltzerList = this.state.mainSeltzerList.map((seltzer) => {return seltzer.id === id ? selectedSeltzer : seltzer});\r\n    this.setState({ mainSeltzerList: newSeltzerList});\r\n  }\r\n\r\n\r\n  render() {\r\n    let currentlyVisibleState = null;\r\n    let buttonText = null;\r\n    if (this.state.editing) {\r\n      currentlyVisibleState = <EditSeltzerForm seltzer={this.state.selectedSeltzer} onEditSeltzer = {this.handleEditingSeltzer}/>\r\n      buttonText = \"Return to Seltzer List\";\r\n    } else if (this.state.selectedSeltzer != null) {\r\n      currentlyVisibleState = <SeltzerDetail seltzer={this.state.selectedSeltzer} onClickDelete={this.handleDeletingSeltzer} onClickEdit = {this.handleEditClick}/>\r\n      buttonText = \"Return to Seltzer List\";\r\n    } else if (this.state.formVisibleOnPage){\r\n      currentlyVisibleState = <NewSeltzerForm onNewSeltzerCreation={this.handleNewSeltzerToList}/>\r\n      buttonText = \"Return to Seltzer List\";\r\n    } else {\r\n      currentlyVisibleState = <SeltzerList seltzerList={this.state.mainSeltzerList} onSeltzerSelection={this.handleChangingSelectedSeltzer} onClickBuy = {this.handleSellPint}/>\r\n      buttonText = \"Add New Seltzer\";\r\n    }\r\n    return (\r\n      <>\r\n        {currentlyVisibleState}\r\n        <button onClick={this.handleClick} className=\"btn btn-dark\">{buttonText}</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SeltzerControl;","import '../App.css';\nimport React from 'react';\nimport Header from './Header';\nimport SeltzerControl from './SeltzerControl';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <>\n      <Header />\n      <SeltzerControl />\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}